---
- hosts: all
  become: true
  roles:
    - fubarhouse.golang
  tasks:
  - name: 2.1 Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - sysstat
      - dstat

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: 2.2 Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: 2.3 Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Ensure default kubelet file
    file:
      path: /etc/default/kubelet
      state: touch
      mode: 0600

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=172.16.0.0/16
    args:
      creates: /etc/kubernetes/manifests/kube-apiserver.yaml

  - name: 2.4 Setup kubeconfig for vagrant user
    file:
      path: /home/vagrant/.kube
      owner: vagrant
      group: vagrant
      mode: '0750'
      state: directory


  - name: Copy file with owner and permissions
    copy:
      remote_src: yes
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      mode: '0640'

  - name: add kubectl bash completion
    lineinfile:
      path: /home/vagrant/.bashrc
      line: source <(kubectl completion bash)
      state: present

  - name: add kubectl bash completion
    lineinfile:
      path: /home/vagrant/.bashrc
      line: source <(kubectl completion bash)
      state: present

  - name: 2.5 Check calico pod network
    become: false
    command: kubectl get cm calico-config --namespace kube-system -oyaml
    ignore_errors: True
    register: calico_config

  - name: 2.5 Install calico pod network
    become: false
    shell: |
      wget https://docs.projectcalico.org/v3.10/manifests/calico.yaml -O calico.yaml
      sed -i "s,192.168.0.0/16,172.16.0.0/16,g" calico.yaml
      kubectl apply -f calico.yaml
    when: calico_config is failed

  - name: 2.6 Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: false
    local_action: "copy content='{{ join_command.stdout_lines[0] }}' dest=join-command"

  handlers:
    - name: docker status
      service: name=docker state=started

